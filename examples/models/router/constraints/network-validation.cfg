# Configuration constraint shows that although
# some part in "net" might be there, some not,
# a constraint requires some attributes must be
# all the time, while others might be omitted.
constraints:
  #  addresses-verification:
  #    descr: interfaces have addresses assigned
  #    expr:
  #      # This constraint will work only for entity "addresses"
  #      addresses:
  #        any:
  #          - virtual-main
  #          - virtual-secondary
  #        all:
  #          - wifi
  #
  #      # This constraint will work for any other entities
  #      # if bound by an action
  #      $:
  #        any:
  #          - virtual-main
  #          - virtual-secondary
  #          - wifi

  sockets-verification:
    descr: Check a process that requires a specific disk space

    # Which entities. $ for all.
    # If $ and some entities, then it means "all but these".
    # If there is no $, then only mentioned entities
    entities:
      - $
      - addresses

    # Expression type: any, all
    any:
      # State (applies to "entities" clause)
      interfaces:
        # compare data with facts
        - fact: if-up.virbr1.mac
          equals: "claim(virtual.ipv4)"

        # compare data with the expected outcome?
        - fact: if-up.virbr1.port
          equals: 0

        - fact: foo.bar.baz
          equals: claim(virtual.mac)

        # equals, less, more, matches (regex), contains, starts, ends

    all:
      $:
        - fact: if-up.wlp0s20f3.inet
          equals: "claim(wifi-v6.inet)"

    # constraint, saying the expression should never occur
    none:
      $:
        - fact: cpu.usage.low
          more: 80
