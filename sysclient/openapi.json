{
  "openapi": "3.1.0",
  "info": {
    "title": "SysInspect API",
    "description": "SysInspect Web API for interacting with the master interface.",
    "license": {
      "name": "",
      "identifier": "Apache-2.0"
    },
    "version": "0.1.0"
  },
  "paths": {
    "/api/v1/authenticate": {
      "post": {
        "tags": [
          "System"
        ],
        "description": "Authenticates a user using configured authentication method. The payload must be a base64-encoded, RSA-encrypted JSON object with username and password fields as follows:\n\n```json\n{\n\"username\": \"darth_vader\",\n\"password\": \"I am your father\",\n\"pubkey\": \"...\"\n}\n```\n\nIf the API is in development mode, it will return a static token without actual authentication.",
        "operationId": "authenticateUser",
        "requestBody": {
          "description": "Base64-encoded, RSA-encrypted JSON containing username and password. See description for details.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Authentication successful. Returns a session ID (sid) if credentials are valid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                },
                "example": {
                  "status": "authenticated",
                  "sid": "session-id"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Returned if payload is missing, invalid, or credentials are incorrect.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                },
                "example": {
                  "status": "error",
                  "sid": null,
                  "error": "Invalid payload"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dev_query": {
      "post": {
        "tags": [
          "Minions"
        ],
        "description": "Development endpoint for querying minions. FOR DEVELOPMENT AND DEBUGGING PURPOSES ONLY!",
        "operationId": "query_handler_dev",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryPayloadRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/health": {
      "post": {
        "tags": [
          "System"
        ],
        "description": "Checks the health of the SysInspect API. Returns basic information about the API status, telemetry, and scheduler tasks.",
        "operationId": "healthCheck",
        "responses": {
          "200": {
            "description": "Health status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                },
                "example": {
                  "status": "healthy",
                  "info": {
                    "telemetry_enabled": true,
                    "scheduler_tasks": 5,
                    "api_version": "0.1.0"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                },
                "example": {
                  "status": "unhealthy",
                  "info": {
                    "telemetry_enabled": false,
                    "scheduler_tasks": 0,
                    "api_version": "0.1.0"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/masterkey": {
      "post": {
        "tags": [
          "RSA Keys"
        ],
        "description": "Retrieve the master public key from the keystore.",
        "operationId": "masterKey",
        "responses": {
          "200": {
            "description": "Public key operations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterKeyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Error retrieving master key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MasterKeyError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pushkey": {
      "post": {
        "tags": [
          "RSA Keys"
        ],
        "description": "Push a public key for a user. Requires an authenticated session ID.",
        "operationId": "pushkey",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PubKeyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Public key saved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PubKeyResponse"
                },
                "example": {
                  "message": "Public key saved successfully"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PubKeyError"
                },
                "example": {
                  "error": "Invalid session ID"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/query": {
      "post": {
        "tags": [
          "Minions"
        ],
        "operationId": "query_handler",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthInnerRequest": {
        "type": "object",
        "properties": {
          "password": {
            "type": [
              "string",
              "null"
            ]
          },
          "username": {
            "type": [
              "string",
              "null"
            ]
          }
        }
      },
      "AuthRequest": {
        "type": "object",
        "required": [
          "payload",
          "pubkey"
        ],
        "properties": {
          "payload": {
            "type": "string",
            "description": "Base64-encoded, RSA-encrypted JSON: {\"username\": \"...\", \"password\": \"...\", \"pubkey\": \"...\"}"
          },
          "pubkey": {
            "type": "string"
          }
        }
      },
      "AuthResponse": {
        "type": "object",
        "required": [
          "status",
          "sid_cipher",
          "symkey_cipher",
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          },
          "sid_cipher": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "symkey_cipher": {
            "type": "string"
          }
        }
      },
      "HealthInfo": {
        "type": "object",
        "required": [
          "telemetry_enabled",
          "scheduler_tasks",
          "api_version"
        ],
        "properties": {
          "api_version": {
            "type": "string"
          },
          "scheduler_tasks": {
            "type": "integer",
            "minimum": 0
          },
          "telemetry_enabled": {
            "type": "boolean"
          }
        }
      },
      "HealthResponse": {
        "type": "object",
        "required": [
          "status",
          "info"
        ],
        "properties": {
          "info": {
            "$ref": "#/components/schemas/HealthInfo"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "MasterKeyError": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "MasterKeyResponse": {
        "type": "object",
        "required": [
          "key"
        ],
        "properties": {
          "key": {
            "type": "string"
          }
        }
      },
      "PubKeyError": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "PubKeyRequest": {
        "type": "object",
        "description": "Push to push a user public key to store on the server.",
        "required": [
          "sid_cipher",
          "key"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "sid_cipher": {
            "type": "string"
          }
        }
      },
      "PubKeyResponse": {
        "type": "object",
        "required": [
          "message"
        ],
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "QueryError": {
        "type": "object",
        "required": [
          "status",
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "QueryPayloadRequest": {
        "type": "object",
        "required": [
          "model",
          "query",
          "traits",
          "mid",
          "context"
        ],
        "properties": {
          "context": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "propertyNames": {
              "type": "string"
            }
          },
          "mid": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "query": {
            "type": "string"
          },
          "traits": {
            "type": "string"
          }
        }
      },
      "QueryRequest": {
        "type": "object",
        "required": [
          "sid_rsa",
          "nonce",
          "payload"
        ],
        "properties": {
          "nonce": {
            "type": "string"
          },
          "payload": {
            "type": "string"
          },
          "sid_rsa": {
            "type": "string"
          }
        }
      },
      "QueryResponse": {
        "type": "object",
        "required": [
          "status",
          "message"
        ],
        "properties": {
          "message": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      }
    }
  }
}
