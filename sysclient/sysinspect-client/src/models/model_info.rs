/*
 * SysInspect API
 *
 * SysInspect Web API for interacting with the master interface.
 *
 * The version of the OpenAPI document: 0.1.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ModelInfo {
    /// A brief description of the model
    #[serde(rename = "description")]
    pub description: String,
    /// Entity to a vector of bound actions
    #[serde(rename = "entity-states")]
    pub entity_states: std::collections::HashMap<String, Vec<Vec<serde_json::Value>>>,
    /// The unique identifier of the model (Id)
    #[serde(rename = "id")]
    pub id: String,
    /// The author of the model
    #[serde(rename = "maintainer")]
    pub maintainer: String,
    /// The name of the model
    #[serde(rename = "name")]
    pub name: String,
    /// The version of the model
    #[serde(rename = "version")]
    pub version: String,
}

impl ModelInfo {
    pub fn new(description: String, entity_states: std::collections::HashMap<String, Vec<Vec<serde_json::Value>>>, id: String, maintainer: String, name: String, version: String) -> ModelInfo {
        ModelInfo {
            description,
            entity_states,
            id,
            maintainer,
            name,
            version,
        }
    }
}

